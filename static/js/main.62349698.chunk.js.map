{"version":3,"sources":["components/searchappbar.js","components/tooltip.js","components/todos.js","components/popup.js","App.js","serviceWorker.js","index.js"],"names":["menuButton","marginLeft","marginRight","SimpleMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","anchorEl","handleClick","event","setState","currentTarget","handleClose","_this2","clearAll","classes","react_default","a","createElement","IconButton_default","style","color","aria-label","aria-owns","undefined","aria-haspopup","onClick","Menu_default","core_Menu_default","id","open","Boolean","onClose","disableAutoFocusItem","MenuItem_default","e","React","Component","withStyles","theme","root","width","grow","flexGrow","title","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","className","AppBar_default","Toolbar_default","searchappbar_SimpleMenu","Typography_default","variant","noWrap","Search_default","InputBase_default","placeholder","input","fab","margin","absolute","bottom","right","handleClickOpen","addToDo","Tooltip_default","Fab_default","Add_default","paperstyle","padding","minWidth","Todos","todoslist","todos","map","todo","index","index_es","item","key","name","container","direction","FormDialog","todoname","handleChange","bind","assertThisInitialized","target","value","console","log","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","onChange","autoFocus","label","type","fullWidth","DialogActions_default","Button_default","disabled","reset","createMuiTheme","typography","useNextVariants","primary","red","App","handleDateChange","date","selectedDate","Date","slice","push","todoadder","react","core_styles","CssBaseline_default","Helmet","charSet","content","rel","href","searchappbar","components_todos","tooltip","popup_FormDialog","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62349698.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\n\n\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nconst menuButton = {\n  marginLeft: -12,\n    marginRight: 20\n}\n\n\nclass SimpleMenu extends React.Component {\n  constructor(props){\n    super(props);\n    \n\n  }\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    \n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n  \n    this.setState({ anchorEl: null });\n  };\n\n \n\n  render() {\n    const { anchorEl } = this.state;\n    const {classes} = this.props;\n    const clearAll = this.props.clearAll;\n    \n    return (\n      <div>\n\n      <IconButton style={menuButton} color=\"inherit\" aria-label=\"Open drawer\" aria-owns={anchorEl ? 'simple-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}>\n            <MenuIcon />\n      </IconButton>\n\n\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n          disableAutoFocusItem\n        >\n          <MenuItem onClick={(e) => {this.handleClick(e); this.handleClose()}}>Change view</MenuItem>\n          <MenuItem onClick={(e) => {this.handleClick(e); clearAll(); this.handleClose(e)}}>Clear all</MenuItem>\n          <MenuItem onClick={(e) => {this.handleClick(e); this.handleClose()}}>Info</MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\nfunction SearchAppBar(props) {\n  const { classes } = props;\n  \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n        <SimpleMenu clearAll={props.clearAll}></SimpleMenu>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n           {props.title}\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search by name\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SearchAppBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\n\n\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit * 2,\n  },\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 3,\n  },\n});\n\nfunction SimpleTooltips(props) {\n  const { classes } = props;\n  let addtodo = props.addToDo;\n  let handleClickOpen = props.handleClickOpen;\n  return (\n    <div onClick={(e)=>{handleClickOpen(e)}}>\n      <Tooltip title=\"Add\" aria-label=\"Add\">\n        <Fab color=\"primary\" className={classes.absolute}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n    </div>\n  );\n}\n\nSimpleTooltips.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTooltips);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, Paper, Grid } from '@material-ui/core';\n\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit * 2,\n  },\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 3,\n  },\n  paperstyle: {\n    margin: 5,\n    padding: 10,\n    minWidth: 250\n},\n});\n\nconst paperstyle = {\n    margin: 5,\n    padding: 10,\n    minWidth: 275\n}\n\nclass Todos extends React.Component {\nconstructor(props){\n    super(props);\n}\n\n  render(){\nconst {classes} = this.props;\nlet todos = this.props.todos;\n        let todoslist = todos.map((todo, index)=> <Grid item key={todo.name+index}><Paper style={paperstyle}><Typography>{todo.name}</Typography></Paper></Grid>);\n    return (   \n        <div>\n            <Grid container  direction=\"row\"\n  >\n        {todoslist}\n        </Grid>\n        </div>\n      );\n  }\n\n}\n\nTodos.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Todos);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nexport default class FormDialog extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            todoname: \"\",\n           };\n           this.handleChange = this.handleChange.bind(this);\n    }\n  \nhandleChange(e){\n    let name = e.target.value;\n    \n    this.setState({\n        todoname: name\n    });\n    console.log(\"handlechane\", name)\n}\n//   handleClickOpen = () => {\n//     this.setState({ open: true });\n//   };\n\n//   handleClose = () => {\n//     this.setState({ open: false });\n//   };\n\nreset(){\n    this.setState({\n        todoname: \"\"\n    }); \n}\n\n\n  render() {\n      let name = this.state.todoname===\"\";\n      let handleClose = this.props.handleClose;\n      let addToDo = this.props.addToDo;\n    return (\n      <div>\n        <Dialog\n          open={this.props.open}\n          onClose={(e)=>{handleClose(e)}}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Create</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Plese enter the task name below\n            </DialogContentText>\n            <TextField onChange={this.handleChange}\n              autoFocus\n              margin=\"dense\"\n              id=\"todoname\"\n              label=\"todoname\"\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={(e)=>{handleClose(e)}} color=\"primary\">\n              Cancel\n            </Button>\n            <Button disabled={name} onClick={(e)=>{addToDo(this.state.todoname); this.reset(); handleClose(e)}} color=\"primary\">\n              Done\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport 'typeface-roboto';\nimport { withStyles, createMuiTheme, MuiThemeProvider, withTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Helmet } from 'react-helmet'\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport {Typography, AppBar, Icon, Link, Toolbar, IconButton, InputBase} from '@material-ui/core/';\nimport { red } from '@material-ui/core/colors';\nimport SearchAppBar from './components/searchappbar';\nimport SimpleTooltips from './components/tooltip';\nimport Todos from './components/todos';\nimport FormDialog from './components/popup';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n     primary: red,\n     type: \"dark\"\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n});\n\nclass App extends Component {\n constructor(props){\n   super(props);\nthis.state={\n  todos: [],\n  open: false,\n  selectedDate: new Date()\n}\nthis.addToDo = this.addToDo.bind(this);\nthis.clearAll = this.clearAll.bind(this);\nthis.handleClickOpen = this.handleClickOpen.bind(this);\nthis.handleClose = this.handleClose.bind(this);\nthis.handleDateChange = this.handleDateChange.bind(this);\n }\n  \naddToDo(name){\n  let todos = this.state.todos.slice();  \n  todos.push({name: name});  \nthis.setState({\ntodos: todos,\n});\n}\n\nclearAll(event){ \n  console.log(\"clearall fired\");\nthis.setState({\ntodos: []\n});\n};\n\nhandleDateChange = date => {\n  this.setState({ selectedDate: date });\n};\n\nhandleClickOpen = () => {\n  this.setState({ open: true });\n  console.log(\"handlecickopen\")\n};\n\nhandleClose = () => {\n  this.setState({ open: false });\n  console.log(\"handleclose\")\n};\n\n\n\n\n  render() {\n    const todos = this.state.todos;\nlet todoadder = this.state.todoadder;\n\n    return (<Fragment>\n   <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <div className=\"App\">\n\n    <Helmet>\n    <meta charSet=\"utf-8\" name=\"viewport\"\n  content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\" />\n    <title>To do App</title>\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n    </Helmet>\n\n    <SearchAppBar clearAll={this.clearAll} title=\"To do App\"></SearchAppBar>\n    <Todos todos={todos}></Todos>\n    <SimpleTooltips handleClickOpen={this.handleClickOpen} ></SimpleTooltips>\n    <FormDialog open={this.state.open} handleClose={this.handleClose} addToDo={this.addToDo}></FormDialog>\n   \n    \n    \n    </div>\n    </MuiThemeProvider>\n    </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}